package com.example.Registration.controller;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.http.ResponseEntity;
import org.springframework.web.bind.annotation.PostMapping;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RestController;
import org.springframework.security.authentication.*;
import com.example.Registration.model.AuthenticationRequest;
import com.example.Registration.model.AuthenticationResponse;
import com.example.Registration.model.User;
import com.example.Registration.model.repo.UserRepo;

@RestController
public class UserController 
{
	@Autowired
	private UserRepo repo;
	
	@Autowired
	private AuthenticationManager authenticationManager;
	
	@PostMapping("/register")
	public ResponseEntity<?> newUser(@RequestBody AuthenticationRequest authenticationRequest)
	{
		User user=new User();
		String username,password;
		//get data from new user
		username=authenticationRequest.getUsername();
		password=authenticationRequest.getPassword();
		//set data 
		user.setUsername(username);
		user.setPassword(password);
		try
		{
			repo.save(user);//save data toDB

		}
		catch(Exception e)
		{
			return ResponseEntity.ok(new AuthenticationResponse("Error while registering for "+username));//if error occurs
		}
		
		return ResponseEntity.ok(new AuthenticationResponse("Registered successfully for "+username));//else 
	}
	
	@PostMapping("/auth")
	public ResponseEntity<?> authenticateUser(@RequestBody AuthenticationRequest authenticationRequest)
	{
		String username,password;
		//get data from new user
		username=authenticationRequest.getUsername();
		password=authenticationRequest.getPassword();
		try
		{
			authenticationManager.authenticate(new UsernamePasswordAuthenticationToken(username, password));
		}
		catch(BadCredentialsException e)
		{
			return ResponseEntity.ok(new AuthenticationResponse("Error while authentication"));
		}
		
		return ResponseEntity.ok(new AuthenticationResponse("Authenticated successfully for "+username));
	}

}
