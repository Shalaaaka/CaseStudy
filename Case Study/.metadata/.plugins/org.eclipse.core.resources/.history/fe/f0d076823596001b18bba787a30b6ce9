package com.example.Stores.controller;
import java.util.Collection;
import java.util.Optional;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.web.bind.annotation.DeleteMapping;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.PostMapping;
import org.springframework.web.bind.annotation.PutMapping;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RestController;
import com.example.Stores.model.Stores;
import com.example.Stores.service.StoresServiceImpl;

@RestController  
public class StoresController 
{
	@Autowired
	private StoresServiceImpl service;
	
	@PostMapping("/create")
	public Stores createStore(@RequestBody Stores stores) throws Exception
	{
		String tempName=stores.getName();
		if (tempName!=null && !"".equals(tempName))
		{
			Stores userobj=service.findStore(tempName);//find if user of that emailid is present 
			if (userobj!=null)
			{
				throw new Exception("Store "+stores.getName()+"already exists");
			}
		}
		
		Stores userobj=null;
		userobj=service.saveStore(stores);
		return userobj;
		
	}
	
	@GetMapping("/getall")
	public Collection<Stores> getAll()
	{
		return service.getAllStores();
	}
	
	@GetMapping("/getbyname/{name}")
    public Optional<Stores> getByName(@PathVariable(value= "name") String name) 
	{
		return service.findStoreByName(name);
    }
	
	@DeleteMapping("/delete/{name}")
    public String delete(@PathVariable(value= "name") String name) 
	{
        service.deleteStoreByName(name);
        return "Store " + name + " deleted.";
    }
	
	@PutMapping("/update/{name}")
    public void updateStore(@PathVariable(value= "name") String name, @RequestBody Stores stores) 
	{
		service.updateStore(name, stores);
    }
}